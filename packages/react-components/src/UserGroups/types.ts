import { MetadataProps } from '../common/Metadata/types';

interface UserGroupProps {
  /**
   * An endpoint url
   */
  host: string;
  /**
   * Autogenerated token
   */
  token: string;
  /**
   * An array of objects to be added to the table.
   */
  metadata?: MetadataProps[];
  translations?: {
    /* not impl */
  };
  /**
   * Set User Groups default list when creating a new Account
   */
  userGroupsDefaultSelected?: string[];
}

/**
 * User Group Default Structure
 */
interface UserGroupDefault {
  /**
   * The user group id
   */
  id: string;
  /**
   *  The user group name
   */
  name: string;
}

/**
 * User Group Data Structure
 */
interface UserGroupsData extends UserGroupDefault {
  /**
   *  A list of users
   */
  users: string[];
  /**
   *  Metadata object supplied to extend the table
   */
  metadata?: {};
}

interface UserGroups extends UserGroupDefault {
  /**
   * A list of users for User Groups
   */
  users: string[];
  /**
   * User Group metadata
   */
  metadata: {};
}

/**
 *  The props required for the User Group Form
 */
interface UserGroupFormProps {
  /**
   *  Submit the data from the form to a HOC to create or update the data.
   */
  onSubmit: (e: any) => void;
  /**
   *  Check if the current form is on edit mode
   */
  isEditing: boolean;
  /**
   *  Prop which contains the clicked row's data
   */
  selectedUserGroup: UserGroupsData;
  /**
   * Function to close the Dialog once the cancel button is clicked.
   */
  onCancel: () => void;
  /**
   * List of existing users
   */
  listOfUsers: string[];
  /**
   * Metadata supplied on the HOC to extend the table.
   */
  metadata: MetadataProps[];
}

export { UserGroupProps, UserGroupsData, UserGroups, UserGroupFormProps };
